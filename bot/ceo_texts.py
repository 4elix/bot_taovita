from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, FSInputFile

from ghostwriter import *
from keyboards.btn_text import *
from keyboards.btn_inline import *
from support import write_excel_sales_info
from utils import DeleteEmployee, EditEmployee, YearSelas
from database.database_manager import SQLActionManager as SAM

txt_ceo_router = Router()

db_products = SAM().products
db_users = SAM().users
db_carts = SAM().carts


@txt_ceo_router.message(F.text.in_(['–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô', 'Menyuga qaytish üîô']))
async def react_btn_back_menu(message: Message):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))


@txt_ceo_router.message(F.text.in_(['–†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º üõ†', 'Xodimlar bilan ishlash üõ†']))
async def react_btn_work_employee(message: Message):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    status = db_users.staff_manager(chat_id)
    if status == 'CLIENT' or status == '404':
        await message.answer('–û—à–∏–±–∫–∞' if lang == 'RU' else 'Xato', reply_markup=btn_start_menu(lang, chat_id))
    else:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è' if lang == 'RU' else 'Harakatlarni tanlang',
                             reply_markup=btn_action_employee(lang))


@txt_ceo_router.message(F.text.in_(['–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ üìÉ', "Xodimlar ro'yxati üìÉ"]))
async def react_btn_list_employee(message: Message):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    status = db_users.staff_manager(chat_id)
    if status == 'CLIENT' or status == '404':
        await message.answer('–û—à–∏–±–∫–∞' if lang == 'RU' else 'Xato', reply_markup=btn_start_menu(lang, chat_id))
    else:
        list_employee = db_users.get_list_employee()
        for employee in list_employee:
            fio, phone_number = employee
            text = text_list_employee(lang, fio, phone_number)
            await message.answer(text, reply_markup=btn_action_employee(lang))


@txt_ceo_router.message(F.text.in_(['–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ‚ùå', 'Xodimni olib tashlang ‚ùå']))
async def react_btn_delete_employee(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    status = db_users.staff_manager(chat_id)
    if status == 'CLIENT' or status == '404':
        await message.answer('–û—à–∏–±–∫–∞' if lang == 'RU' else 'Xato', reply_markup=btn_start_menu(lang, chat_id))
    else:
        kb_back = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [KeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' if lang == 'RU' else 'Menyuga qaytish üîô')]
        ])
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' if lang == 'RU' else 'Xodimning ismini kiriting',
                             reply_markup=kb_back)
        await state.set_state(DeleteEmployee.name_employee)


@txt_ceo_router.message(DeleteEmployee.name_employee)
async def get_name_employee(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    if message.text == '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' or message.text == 'Menyuga qaytish üîô':
        await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))
        await state.clear()
    else:
        await state.update_data(name_employee=message.text)
        kb_back = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [KeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' if lang == 'RU' else 'Menyuga qaytish üîô')]
        ])
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –ø—Ä–∏–º–µ—Ä: +998999999999'
                             if lang == 'RU' else 'Xodimning telefon raqamini kiriting, masalan: +998999999999',
                             reply_markup=kb_back)
        await state.set_state(DeleteEmployee.phone_number)


@txt_ceo_router.message(DeleteEmployee.phone_number)
async def get_phone_number(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    if message.text == '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' or message.text == 'Menyuga qaytish üîô':
        await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))
        await state.clear()
    else:
        data = await state.get_data()
        await state.clear()

        phone_number = message.text
        state_code = db_users.delete_employee(data['name_employee'], phone_number)
        if state_code == 404:
            await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –§–ò–û –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑' if lang == 'RU' else
                                 "Siz noto'g'ri ism yoki telefon raqamini kiritdingiz, qayta urinib ko'ring",
                                 reply_markup=btn_action_employee(lang))
        else:
            await message.answer('–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–¥–∞–ª–µ–Ω' if lang == 'RU' else 'Xodim olib tashlandi',
                                 reply_markup=btn_start_menu(lang, chat_id))


@txt_ceo_router.message(F.text.in_(['–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ‚úè', "Ushbu xodimni o'zgartiring ‚úè"]))
async def react_btn_edit_employee(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    status = db_users.staff_manager(chat_id)
    if status == 'CLIENT' or status == '404':
        await message.answer('–û—à–∏–±–∫–∞' if lang == 'RU' else 'Xato', reply_markup=btn_start_menu(lang, chat_id))
    else:
        kb_back = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [KeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' if lang == 'RU' else 'Menyuga qaytish üîô')]
        ])
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞' if lang == 'RU' else 'Xodimning ismini kiriting',
                             reply_markup=kb_back)
        await state.set_state(EditEmployee.name_employee)


@txt_ceo_router.message(EditEmployee.name_employee)
async def get_name_employee(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    if message.text == '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' or message.text == 'Menyuga qaytish üîô':
        await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))
        await state.clear()
    else:
        await state.update_data(name_employee=message.text)
        kb_back = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [KeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' if lang == 'RU' else 'Menyuga qaytish üîô')]
        ])
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –ø—Ä–∏–º–µ—Ä: +998999999999'
                             if lang == 'RU' else 'Xodimning telefon raqamini kiriting, masalan: +998999999999',
                             reply_markup=kb_back)
        await state.set_state(EditEmployee.phone_number)


@txt_ceo_router.message(EditEmployee.phone_number)
async def get_phone_number(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    if message.text == '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' or message.text == 'Menyuga qaytish üîô':
        await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))
        await state.clear()
    else:
        await state.update_data(phone_number=message.text)
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å' if lang == 'RU' else 'Lavozimni tanlang', reply_markup=btn_post(lang))


@txt_ceo_router.callback_query(lambda call: 'employee_change_admin' in call.data)
async def react_btn_change_admin(callback: CallbackQuery, state: FSMContext):
    chat_id = callback.message.chat.id
    lang = db_users.get_lang(chat_id)

    data = await state.get_data()
    fio = data['name_employee']
    phone_number = data['phone_number']
    await state.clear()

    state_code = db_users.change_post(fio, phone_number, (True, False, True))
    if state_code == 404:
        text = error_text_fio_and_phone[lang]
        await callback.message.answer(text,
                                      reply_markup=btn_action_employee(lang))
    else:
        await callback.message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ' if lang == 'RU' else
                                      "O'zgarishlar muvaffaqiyatli bo'ldi", reply_markup=btn_start_menu(lang, chat_id))


@txt_ceo_router.callback_query(lambda call: 'employee_change_ceo' in call.data)
async def react_btn_change_ceo(callback: CallbackQuery, state: FSMContext):
    chat_id = callback.message.chat.id
    lang = db_users.get_lang(chat_id)

    data = await state.get_data()
    fio = data['name_employee']
    phone_number = data['phone_number']
    await state.clear()

    state_code = db_users.change_post(fio, phone_number, (True, True, True))
    if state_code == 404:
        text = error_text_fio_and_phone[lang]
        await callback.message.answer(text, reply_markup=btn_action_employee(lang))
    else:
        await callback.message.answer('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ' if lang == 'RU' else
                                      "O'zgarishlar muvaffaqiyatli bo'ldi", reply_markup=btn_start_menu(lang, chat_id))


@txt_ceo_router.message(F.text.in_(['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º üìñ', "Savdo haqida ma'lumot üìñ"]))
async def react_btn_info_sales(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    status = db_users.staff_manager(chat_id)
    if status == 'CLIENT' or status == '404':
        await message.answer('–û—à–∏–±–∫–∞' if lang == 'RU' else 'Xato', reply_markup=btn_start_menu(lang, chat_id))
    else:
        kb_back = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
            [KeyboardButton(text='–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' if lang == 'RU' else 'Menyuga qaytish üîô')]
        ])
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –ø—Ä–æ–¥–∞–∂, –ø—Ä–∏–º–µ—Ä 2025' if lang == 'RU' else 'Savdo kodini kiriting, misol 2025',
                             reply_markup=kb_back)
        await state.set_state(YearSelas.year)


@txt_ceo_router.message(YearSelas.year)
async def get_year_for_sales(message: Message, state: FSMContext):
    chat_id = message.chat.id
    lang = db_users.get_lang(chat_id)
    year = message.text
    if message.text == '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é üîô' or message.text == 'Menyuga qaytish üîô':
        await message.answer('–•–æ—Ä–æ—à–æ' if lang == 'RU' else 'Yaxshi', reply_markup=btn_start_menu(lang, chat_id))
        await state.clear()
    else:
        if year.isdigit():
            await state.clear()
            sales_list = db_carts.get_sales(year)
            action = '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º'
            path = write_excel_sales_info(sales_list, action, chat_id)
            await message.answer_document(text=f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ {year}' if lang == 'RU'
            else f"Savdo haqida ma'lumot  {year}", document=FSInputFile(path))
        else:
            await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑' if lang == 'RU' else
                                 "Siz noto'g'ri ma'lumotlarni kiritdingiz, yana urinib ko'ring")
            await state.set_state(YearSelas.year)
